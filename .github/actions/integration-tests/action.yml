name: "Integration tests"
description: "Run tests with BTP services being bound"
inputs:
  CF_API:
    description: "Cloud Foundry API endpoint"
    required: true
  CF_USERNAME:
    description: "Cloud Foundry username"
    required: true
  CF_PASSWORD:
    description: "Cloud Foundry password"
    required: true
  CF_ORG:
    description: "Cloud Foundry organization"
    required: true
  CF_SPACE:
    description: "Cloud Foundry space"
    required: true
  NODE_VERSION:
    description: "Node.js version to use for tests"
    required: true
  OBJECT_STORE_KIND:
    description: "Hyperscaler to use for tests"
    required: true
runs:
  using: "composite"
  steps:
    - name: Install dependencies and Cloud Foundry CLI (v8.9.0)
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libc6 wget tar
        wget "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=8.9.0&source=github-rel" -O cf-cli.tar.gz
        tar -xvzf cf-cli.tar.gz
        sudo mv cf /usr/local/bin/
        sudo mv cf8 /usr/local/bin/
        cf --version

    - name: Authenticate with Cloud Foundry
      shell: bash
      run: |
        echo "::debug::CF_API=${{ inputs.CF_API }}"
        for i in {1..3}; do
          cf login -a ${{ inputs.CF_API }} -u ${{ inputs.CF_USERNAME }} -p ${{ inputs.CF_PASSWORD }} -o ${{ inputs.CF_ORG }} -s ${{ inputs.CF_SPACE }} && break
          echo "cf login failed, retrying ($i/3)..."
          sleep 10
          if [ "$i" -eq 3 ]; then
            echo "❌ cf login failed after 3 attempts."
            exit 1
          fi
        done

    - uses: actions/checkout@v5
    - name: Use Node.js ${{ inputs.NODE_VERSION}}
      uses: actions/setup-node@v6
      with:
        node-version: ${{ inputs.NODE_VERSION }}
    - run: npm i -g @sap/cds-dk
      shell: bash
    - run: npm i
      shell: bash
    - run: cd tests/incidents-app && npm i
      shell: bash
    - name: Set node env for HANA
      run: echo "NODE_VERSION_HANA=$(echo ${{ inputs.NODE_VERSION }} | tr . _)" >> $GITHUB_ENV
      shell: bash
    # Deploy model to HANA
    - name: Create Object store 
      shell: bash
      run: cf create-service objectstore standard cap-js-attachments-object-store-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA
    - name: Create Malware scanner
      shell: bash
      run: cf create-service malware-scanner clamav cap-js-attachments-scanner-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA
    - name: Create HDI Container
      shell: bash
      run: cf create-service hana hdi-shared cap-js-attachments-hana-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA
    - run: cd tests/incidents-app/ && cds deploy --to hana:cap-js-attachments-hana-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA
      shell: bash
    # Bind against BTP services
    - run: cds bind db -2 cap-js-attachments-hana-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA -o package.json
      shell: bash
    - run: cds bind objectStore -2 cap-js-attachments-object-store-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA -o package.json
      shell: bash
    - run: cds bind malware-scanner -2 cap-js-attachments-scanner-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA -o package.json
      shell: bash

    # Set Hyperscaler for attachment plugin in package.json
    - run: |
        cd tests/incidents-app
        npx -y json -I -f package.json -e "this['cds']['requires']['attachments']['kind'] = { 'hyperscaler': '${{inputs.OBJECT_STORE_KIND}}' }"
      shell: bash

    # Run tests in hybrid mode
    - run: cds bind --exec npm run test
      shell: bash

    # Cleanup
    - name: Delete Malware Scanner instance
      if: ${{ always() }}
      run: cf delete-service cap-js-attachments-scanner-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA -f
      shell: bash
    - name: Delete Object store
      if: ${{ always() }}
      run: cf delete-service cap-js-attachments-object-store-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA -f
      shell: bash
    - name: Delete HDI Container Key
      if: ${{ always() }}
      run: cf delete-service-key cap-js-attachments-hana-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA cap-js-attachments-hana-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA-key -f
      shell: bash
    # Somehow first delete always fails with a "ongoing operation on service binding" error
    - name: Delete HDI Container
      if: ${{ always() }}
      shell: bash
      run: |
        for i in {1..3}; do
          cf delete-service cap-js-attachments-hana-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$NODE_VERSION_HANA -f && break
          echo "HDI container delete failed, retrying ($i/3)..."
          sleep 10
          if [ "$i" -eq 3 ]; then
            echo "❌ HDI container delete failed after 3 attempts."
            exit 1
          fi
        done
